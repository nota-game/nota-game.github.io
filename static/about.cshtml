@using Nota.Site.Generator
@using Nota.Site.Generator.Stages
@using System.Linq;


<p>Test</p>



 <h1>Bilder und andere Lizensierte Dateien</h1>
@{
    var licencedFiles = Model.Metadata.TryGetValue<LicencedFiles>();

    if(licencedFiles is null) {
        <p>No Licenses found</p>
    } else {


        foreach (var b in licencedFiles.LicenseInfos)
        {
            var references = b.Metadata.TryGetValue<ImageReferences>();
            @:<article class="license-information">
            if(references != null){


                @:<header>
                @:@(string.Join(", ",  Enumerable.Distinct(Enumerable.Select(references.References,new Func<ImageReference, String>( x=>System.IO.Path.GetFileName( x.ReferencedId))))))
                @:</header>

                @:<img src='@(b.Id)' />
                





                @:<ul>
                foreach (var r in references.References)
                {
                    @:<li> <a href="@(r.Document)#@(r.Header)">@(r.Version) - @(r.Book) - @(r.Header ?? r.Document)</a></li>
                }
                @:</ul>



            }else if(Nota.IsImage(b.Id) ){
                @:<header>@(b.Id)</header>
                @:<img src='@(b.Id)' />
            } else{
                @:<header>@(b.Id)</header>
            }

            var xmp = b.Metadata.TryGetValue<XmpMetadata>();

            if(xmp != null){
                @:<p>
                if(xmp.Title != null){
                    @:<cite>@(xmp.Title)</cite>
                } else {
                    @:Dieses Bild
                }
                if(xmp.Creators != null){
                    @:Wurde erstellt von @(string.Join(", ", xmp.Creators)) und
                }
                if(xmp.RightsReserved){
                    ist Urheberrechtlich gesch√ºtzt.
                } else {
                    ist frei von Rechten.
                }

                if(xmp.License != null){
                    @:<blockquote>
                        @Html.Raw(Nota.Sanitize(xmp.License))
                    @:</blockquote>
                }

                
                @:</p>

            }

            </article>
        }

    }

} 




